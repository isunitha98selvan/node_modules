import { TestScheduler } from "rxjs/testing/TestScheduler";
import { get } from "./configuration";
import { Context } from "./context";
import { observableMatcher } from "./matcher";
export function marbles(func) {
    if (func.length > 1) {
        return function (first) {
            var rest = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                rest[_i - 1] = arguments[_i];
            }
            var scheduler = new TestScheduler(function (a, b) { return observableMatcher(a, b, get("assert"), get("assertDeepEqual"), get("frameworkMatcher")); });
            var context = new Context(scheduler);
            func.apply(void 0, [context, first].concat(rest));
            context.teardown();
        };
    }
    return function () {
        var rest = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            rest[_i] = arguments[_i];
        }
        var scheduler = new TestScheduler(function (a, b) { return observableMatcher(a, b, get("assert"), get("assertDeepEqual"), get("frameworkMatcher")); });
        var context = new Context(scheduler);
        func.apply(void 0, [context].concat(rest));
        context.teardown();
    };
}
