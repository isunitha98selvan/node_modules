import { argsSymbol } from "./args";
import { assertArgs, assertSubscriptions } from "./assert";
var Expect = (function () {
    function Expect(actual, scheduler, unsubscription) {
        this.actual = actual;
        this.scheduler = scheduler;
        this.unsubscription = unsubscription;
    }
    Expect.prototype.toBeObservable = function (expected, values, error) {
        var _a = this, actual = _a.actual, scheduler = _a.scheduler, unsubscription = _a.unsubscription;
        if (typeof expected === "string") {
            scheduler.expectObservable(actual, unsubscription).toBe(expected, values, error);
        }
        else {
            assertArgs(expected);
            var _b = expected[argsSymbol], error_1 = _b.error, marbles = _b.marbles, values_1 = _b.values;
            scheduler.expectObservable(actual, unsubscription).toBe(marbles, values_1, error_1);
        }
    };
    Expect.prototype.toHaveSubscriptions = function (expected) {
        var _a = this, actual = _a.actual, scheduler = _a.scheduler;
        assertSubscriptions(actual);
        scheduler.expectSubscriptions(actual.subscriptions).toBe(expected);
    };
    return Expect;
}());
export { Expect };
